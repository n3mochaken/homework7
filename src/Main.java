import java.sql.SQLOutput;
import java.util.Scanner;

// Press Shift twice to open the Search Everywhere dialog and type `show whitespaces`,
// then press Enter. You can now see whitespace characters in your code.
public class Main {
    public static void main(String[] args) {
        //task1();
        //task2();
        //task3();
        //task4();
        //task5();
        //task6();
        //task7();
        //task8();


    }

    /**
     * Продолжите работать с кодом, который вы написали в предыдущем уроке — в задачах с накоплениями.
     * <p>
     * С помощью цикла while посчитайте, сколько месяцев потребуется, чтобы накопить 2 459 000 рублей при условии, что первоначально мы имеем 0 рублей и готовы откладывать по 15 тысяч рублей.
     * <p>
     * Результат программы должен быть выведен в консоль с тем количеством месяцев, которое необходимо для накопления данной суммы. Формат сообщения: «Месяц …, сумма накоплений равна … рублей» .
     */
    public static void task1() {
        int deposit = 15000, bank = 0, month = 0, target = 2_459_000;
        while (bank < target) {
            bank = bank + deposit;
            month++;
            if (bank > target) {
                System.out.printf("Месяц %d, сумма накоплений равна %d\n", month, bank);
            }
        }
    }

    /**
     * Выведите в одну строку через пробел числа от 1 до 10 с помощью цикла while.
     * <p>
     * На следующей строке выведите числа в обратном порядке от 10 до 1 с помощью цикла for.
     * <p>
     * Для обоих циклов можно использовать как одну общую переменную, так и свою в каждом цикле.
     * <p>
     * Не забудьте выполнить переход на новую строку между двумя циклами.
     * <p>
     * В результате программы вывод должен получиться следующим:
     * <p>
     * 1 2 3 4 5 6 7 8 9 10
     * <p>
     * 10 9 8 7 6 5 4 3 2 1
     */
    public static void task2() {
        int i = 0;
        while (i < 10) {
            i++;
            System.out.printf("%d ", i);
        }
        System.out.println("");
        for (; i != 0; i--) {
            System.out.printf("%d ", i);
        }
    }

    /**
     * В стране Y население — 12 миллионов человек.
     * <p>
     * Рождаемость составляет 17 человек на 1000, смертность — 8 человек. Рассчитайте, какая численность населения будет через 10 лет, если показатели рождаемости и смертности постоянны.
     * <p>
     * В консоль выведите результат операции на каждый год в формате: «Год …, численность населения составляет …».
     */
    public static void task3() {
        int population = 12_000_000, deathRate = 8, yearsTarget = 10, yearsAmount = 0;
        int birthRate = population / 1000 * 17;
        while (yearsAmount <= yearsTarget) {
            yearsAmount++;
            population = population + birthRate - deathRate;
            System.out.printf("Год %d, численност населения составляет %d\n", yearsAmount, population);
        }
    }

    /**
     * Василий решил положить деньги на накопительный счет, где каждый месяц к сумме его вклада добавляется еще 7%. Первоначальная сумма вклада — 15 тысяч рублей.
     * <p>
     * Вычислите и выведите в консоль, сколько месяцев Василию нужно будет копить, чтобы собрать сумму в 12 миллионов рублей при условии, что процент банка от накоплений не меняется, а всегда равен 7%.
     * <p>
     * Выведите в консоль результат программы с указанием суммы накоплений по каждому месяцу.
     */
    public static void task4() {
        int deposit = 15000, target = 12_000_000, income = 7, month = 0;
        while (deposit < target) {
            deposit = deposit + (deposit * income / 100);
            month++;
            System.out.printf("Месяц %d, сумма на депозите %d\n", month, deposit);
        }
        System.out.println("Василию придется ждать " + month + " месяцев, чтобы скопить 12кк");
    }

    /**
     * Видоизмените программу таким образом, чтобы в консоль выводились не все месяцы подряд, а только каждый шестой. Должны быть видны накопления за 6-й, 12-й, 18-й, 24-й и следующие месяцы.
     */
    public static void task5() {
        int deposit = 15000, target = 12_000_000, income = 7, month = 0;
        while (deposit < target) {
            deposit = deposit + (deposit * income / 100);
            month++;
            if (month % 6 == 0) {
                System.out.printf("Месяц %d, сумма на депозите %d\n", month, deposit);
            }
        }
        System.out.println("Василию придется ждать " + month + " месяцев, чтобы скопить 12кк");
    }

    /**
     * Василий решил, что будет копить деньги ближайшие 9 лет. Он хочет знать, какой будет сумма его накоплений каждые полгода на протяжении этих 9 лет.
     * <p>
     * Исходная сумма всё та же — 15 тысяч рублей, проценты банка — 7% ежемесячно.
     * <p>
     * Напишите программу, которая будет выводить сумму накоплений за каждые полгода в течение 9 лет.
     */
    public static void task6() {
        int deposit = 15000, target = 18, income = 7, month = 0, halfYear = 0;
        while (halfYear < target) {
            deposit = deposit + (deposit * income / 100);
            month++;
            if (month % 6 == 0) {
                halfYear++;
                System.out.printf("Месяц %d, сумма на депозите %d \n", month, deposit);
            }
        }
        System.out.println("На счету Васька за 9 лет натикает " + deposit + " денюжек");
    }

    /**
     * В компании пятница — отчетный день.
     * <p>
     * Нужно написать программу, которая считает дни месяца по датам, определяет, какой день — пятница, и выводит сообщение с напоминанием, что нужно подготовить еженедельный отчет.
     * <p>
     * Создайте переменную типа int, которая хранит в себе номер первой пятницы месяца (число от 1 до 7).
     * <p>
     * Выведите на каждую пятницу месяца (включая полученную) сообщение следующего вида: «Сегодня пятница, ...-е число. Необходимо подготовить отчет».
     * <p>
     * В нашем месяце 31 день. В результате у вас должно получиться от 4 до 5 сообщений с напоминаниями по разным датам.
     */

    public static void task7() {
        int firstFryDay, dayInMonth = 31, count = -1;
        System.out.printf("Введите порядковый номер первой пятницы в месяце\nПосле этого программа скажет тебе, когда нести отчет\n");
        Scanner scanner = new Scanner(System.in);
        firstFryDay = scanner.nextInt();
        while (firstFryDay <= dayInMonth) {
            count++;
            if (count % 7 == 0) {
                System.out.printf("Сегодня пятница %d число, неси отчет\n", firstFryDay);
            }
            firstFryDay++;
        }
    }

    /**
     * Нам нужно написать астрономическое приложение, которое считает, когда над Землей пролетает комета.
     * <p>
     * Известно, что комета пролетает каждый 79-й год, начиная с нулевого.
     * <p>
     * В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее появления (ближайшие 100 лет).
     * <p>
     * Для вычисления периода можно создать две дополнительные переменные, которые содержат год за 200 лет до текущего (из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
     * <p>
     * В результате решения задачи в консоли должен получиться следующий результат:
     * <p>
     * 1896
     * <p>
     * 1975
     * <p>
     * 2054
     */
    public static void task8() {
        int currentYear = 2023, minYear = 0, maxYear = currentYear + 100, startYear = currentYear - 200;
        while (minYear < maxYear) {
            if (minYear % 79 == 0 && startYear < minYear) {
                System.out.println("Сейчас " + minYear + " год, над нами летит комета");
            }
            minYear++;
        }
    }

}







